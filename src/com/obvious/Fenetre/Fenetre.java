/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.obvious.Fenetre;

import java.awt.Image;
import java.awt.Toolkit;
import java.net.URL;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

import com.obvious.Util.PasswordGenerator;
import com.obvious.main.Password;

import net.proteanit.sql.DbUtils;

/**
 *
 * @author Obvious
 */
public class Fenetre extends javax.swing.JFrame {

    /**
	 * 
	 */
	private static final long serialVersionUID = 6180601800645682059L;
	private String id;

    /**
     * Creates new form Fenetre
     */
    public Fenetre() {
        try {
        	/*
        	 * Template
        	 */
            com.jtattoo.plaf.graphite.GraphiteLookAndFeel.setTheme("GREEN", "123", "RE");
            UIManager.setLookAndFeel("com.jtattoo.plaf.graphite.GraphiteLookAndFeel");
            
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
        }
        initComponents();
        /*
         * Logo
         */
        URL i = ClassLoader.getSystemResource("logo.png");
        Toolkit kit = Toolkit.getDefaultToolkit();
        Image img = kit.createImage(i);
        setIconImage(img);
        setTitle("Trousseau de Clé by Obvious");
        Update_table();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        search = new javax.swing.JTextField();
        site = new javax.swing.JTextField();
        username = new javax.swing.JTextField();
        btnadd = new javax.swing.JButton();
        btnclear = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnpassword = new javax.swing.JButton();
        password = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableau = new javax.swing.JTable();
        remove = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        modifbtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchKeyTyped(evt);
            }
        });

        btnadd.setText("Ajouter");
        btnadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonAjoutPressed(evt);
            }
        });

        btnclear.setText("Clear");
        btnclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonClearPressed(evt);
            }
        });

        jLabel1.setText("Site:");

        jLabel2.setText("Username:");

        jLabel3.setText("Password:");

        btnpassword.setText("Generate password");
        btnpassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutinGenererPasswordPressed(evt);
            }
        });

        tableau.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableau.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableauMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableau);

        remove.setText("Supprimer");
        remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonSupprimerPressed(evt);
            }
        });

        jLabel4.setText("Recherche");

        modifbtn.setText("Modifier");
        modifbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(10, 10, 10)
                                .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(btnadd)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(modifbtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(remove)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnclear, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnpassword)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(site, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(site, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnpassword))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnadd)
                            .addComponent(btnclear)
                            .addComponent(remove)
                            .addComponent(modifbtn)))
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );

        pack();
    }
    /*
     * Vide les champs site, username, password
     */
    private void boutonClearPressed(java.awt.event.ActionEvent evt) {
        site.setText("");
        username.setText("");
        password.setText("");
    }
    /*
     * Mise à jour du tableau
     */
    private void Update_table(){
        try{
            String sql = "SELECT * FROM password";
            Connection conn = Password.getConn();
            PreparedStatement p = conn.prepareStatement(sql);
            ResultSet rs = p.executeQuery();
            tableau.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (SQLException ex) {
            Logger.getLogger(Fenetre.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /*
     * Ajout d'une ligne
     */
    private void boutonAjoutPressed(java.awt.event.ActionEvent evt) {

        String siteurl = site.getText();
        String usernamecontent = username.getText();
        String passwordcontent = password.getText();
        String sql = "INSERT INTO password(url,utilisateur,mdp) VALUES(?,?,?)";
        String erreur = "\n";
        boolean erreurbool = false;
        if(empty(siteurl)){
            erreur += "Le site ne doit pas Ãªtre nul \n";
            erreurbool = true;
        }
        if(empty(usernamecontent)){
            erreur+="L'utilisateur ne doit pas Ãªtre nul\n";
            erreurbool = true;
        }
        if(empty(passwordcontent)){
            erreur+="Le mot de passe ne doit pas Ãªtre nul";
            erreurbool = true;
        }
        if(erreurbool){
            JOptionPane.showMessageDialog(null, "Ajout Fail : "+erreur, "InfoBox: Erreur", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Connection conn = Password.getConn();
            try (PreparedStatement pstmt = conn.prepareStatement(sql)) {
                pstmt.setString(1, siteurl);
                pstmt.setString(2, usernamecontent);
                pstmt.setString(3, passwordcontent);
                pstmt.executeUpdate();
                site.setText("");
                username.setText("");
                password.setText("");
                JOptionPane.showMessageDialog(null, "Ajout rÃ©ussi", "InfoBox: Information", JOptionPane.INFORMATION_MESSAGE);
                Update_table();
            } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Ajout Fail : "+ex.getMessage(), "InfoBox: Erreur", JOptionPane.ERROR_MESSAGE);
        }
                  

    }
    /*
     * Vérifie si le textfield est vide 
     */
    public static boolean empty( final String s ) {
      return s == null || s.trim().isEmpty();
    }
    /*
     * Génération d'un mot de passe
     */
    private void boutinGenererPasswordPressed(java.awt.event.ActionEvent evt) {
        PasswordGenerator pwd = new PasswordGenerator();
        password.setText(pwd.getPassword());
    }
    /*
     * Suppression de la ligne
     */
    private void boutonSupprimerPressed(java.awt.event.ActionEvent evt) {
        try {
            String sitecontent = site.getText();
            String passwordcontent = password.getText();
            String usernamecontent = username.getText();
            @SuppressWarnings("unused")
			boolean erreurbool = false;
            if(empty(sitecontent)){
                erreurbool = true;
                return;
            }
            if(empty(usernamecontent)){
                erreurbool = true;
                return;
            }
            if(empty(passwordcontent)){
                erreurbool = true;
                return;
            }
            String sql = "DELETE FROM password WHERE id = ?";
            PreparedStatement p = Password.getConn().prepareStatement(sql);
            p.setInt(1, Integer.valueOf(id));
            p.execute();
            site.setText("");
            password.setText("");
            username.setText("");
            id = "";
            Update_table();
        }catch(SQLException ex)
        {
            Logger.getLogger(Fenetre.class.getName()).log(Level.SEVERE, null, ex);

        }
    }

    private void tableauMouseClicked(java.awt.event.MouseEvent evt) {
        int row = tableau.getSelectedRow();
        id = tableau.getModel().getValueAt(row, 0).toString();
        site.setText(tableau.getModel().getValueAt(row, 1).toString());
        username.setText(tableau.getModel().getValueAt(row, 2).toString());
        password.setText(tableau.getModel().getValueAt(row, 3).toString());
    }
    private void searchKeyTyped(java.awt.event.KeyEvent evt) {
        try {
            String recherche = search.getText();
            String sql = "SELECT * FROM password WHERE url LIKE '%"+recherche+"%'";
            PreparedStatement p = Password.getConn().prepareStatement(sql);
            ResultSet rs = p.executeQuery();
            Search_Table(rs);
            p.close();
        } catch (SQLException ex) {
            Logger.getLogger(Fenetre.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void modifbtnActionPerformed(java.awt.event.ActionEvent evt) {
            String sitecontent = site.getText();
            String passwordcontent = password.getText();
            String usernamecontent = username.getText();
            @SuppressWarnings("unused")
			boolean erreurbool = false;
            if(empty(sitecontent)){
                erreurbool = true;
                return;
            }
            if(empty(usernamecontent)){
                erreurbool = true;
                return;
            }
            if(empty(passwordcontent)){
                erreurbool = true;
                return;
            }
        try{
            String sql = "UPDATE password SET url = ?,utilisateur = ?,mdp = ? WHERE id = ?";
            PreparedStatement p = Password.getConn().prepareStatement(sql);
            p.setString(1, sitecontent);
            p.setString(2, usernamecontent);
            p.setString(3, passwordcontent);
            p.setInt(4, Integer.valueOf(id));
            p.executeUpdate();
            Update_table();
            site.setText("");
            username.setText("");
            password.setText("");
            id = "";
            
        } catch (SQLException ex) {
            Logger.getLogger(Fenetre.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * @param args the command line arguments
     */

    
    private javax.swing.JButton btnadd;
    private javax.swing.JButton btnclear;
    private javax.swing.JButton btnpassword;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton modifbtn;
    private javax.swing.JTextField password;
    private javax.swing.JButton remove;
    private javax.swing.JTextField search;
    private javax.swing.JTextField site;
    private javax.swing.JTable tableau;
    private javax.swing.JTextField username;

    private void Search_Table(ResultSet rs) {
       tableau.setModel(DbUtils.resultSetToTableModel(rs));
    }
}
